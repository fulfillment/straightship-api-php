<?php
/**
 * Permissions
 *
 * PHP version 5
 *
 * @category Class
 * @package  namespace Fulfillment\StraightShip\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Techship API v3
 *
 * API regions:  US: <a href='https://api-us.techship.io/api/docs/ui/index'>https://api-us.techship.io/api/docs/ui/index</a>  CA: <a href='https://api-ca.techship.io/api/docs/ui/index'>https://api-ca.techship.io/api/docs/ui/index</a>
 *
 * OpenAPI spec version: V3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.61
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Fulfillment\StraightShip\Client\Model;

use \ArrayAccess;
use Fulfillment\StraightShip\Client\ObjectSerializer;

/**
 * Permissions Class Doc Comment
 *
 * @category Class
 * @package  namespace Fulfillment\StraightShip\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Permissions implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Permissions';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'allow_packing' => 'bool',
        'dimensions_uom' => 'string',
        'weight_uom' => 'string',
        'show_prices' => 'bool',
        'disable_box_add_remove' => 'bool',
        'disable_estimate' => 'bool',
        'disable_box_editing' => 'bool',
        'allow_re_import' => 'bool',
        'show_options' => 'bool',
        'show_custom_fields' => 'bool',
        'allow_partial_pack' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'allow_packing' => null,
        'dimensions_uom' => null,
        'weight_uom' => null,
        'show_prices' => null,
        'disable_box_add_remove' => null,
        'disable_estimate' => null,
        'disable_box_editing' => null,
        'allow_re_import' => null,
        'show_options' => null,
        'show_custom_fields' => null,
        'allow_partial_pack' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'allow_packing' => 'AllowPacking',
        'dimensions_uom' => 'DimensionsUOM',
        'weight_uom' => 'WeightUOM',
        'show_prices' => 'ShowPrices',
        'disable_box_add_remove' => 'DisableBoxAddRemove',
        'disable_estimate' => 'DisableEstimate',
        'disable_box_editing' => 'DisableBoxEditing',
        'allow_re_import' => 'AllowReImport',
        'show_options' => 'ShowOptions',
        'show_custom_fields' => 'ShowCustomFields',
        'allow_partial_pack' => 'AllowPartialPack'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'allow_packing' => 'setAllowPacking',
        'dimensions_uom' => 'setDimensionsUom',
        'weight_uom' => 'setWeightUom',
        'show_prices' => 'setShowPrices',
        'disable_box_add_remove' => 'setDisableBoxAddRemove',
        'disable_estimate' => 'setDisableEstimate',
        'disable_box_editing' => 'setDisableBoxEditing',
        'allow_re_import' => 'setAllowReImport',
        'show_options' => 'setShowOptions',
        'show_custom_fields' => 'setShowCustomFields',
        'allow_partial_pack' => 'setAllowPartialPack'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'allow_packing' => 'getAllowPacking',
        'dimensions_uom' => 'getDimensionsUom',
        'weight_uom' => 'getWeightUom',
        'show_prices' => 'getShowPrices',
        'disable_box_add_remove' => 'getDisableBoxAddRemove',
        'disable_estimate' => 'getDisableEstimate',
        'disable_box_editing' => 'getDisableBoxEditing',
        'allow_re_import' => 'getAllowReImport',
        'show_options' => 'getShowOptions',
        'show_custom_fields' => 'getShowCustomFields',
        'allow_partial_pack' => 'getAllowPartialPack'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['allow_packing'] = isset($data['allow_packing']) ? $data['allow_packing'] : null;
        $this->container['dimensions_uom'] = isset($data['dimensions_uom']) ? $data['dimensions_uom'] : null;
        $this->container['weight_uom'] = isset($data['weight_uom']) ? $data['weight_uom'] : null;
        $this->container['show_prices'] = isset($data['show_prices']) ? $data['show_prices'] : null;
        $this->container['disable_box_add_remove'] = isset($data['disable_box_add_remove']) ? $data['disable_box_add_remove'] : null;
        $this->container['disable_estimate'] = isset($data['disable_estimate']) ? $data['disable_estimate'] : null;
        $this->container['disable_box_editing'] = isset($data['disable_box_editing']) ? $data['disable_box_editing'] : null;
        $this->container['allow_re_import'] = isset($data['allow_re_import']) ? $data['allow_re_import'] : null;
        $this->container['show_options'] = isset($data['show_options']) ? $data['show_options'] : null;
        $this->container['show_custom_fields'] = isset($data['show_custom_fields']) ? $data['show_custom_fields'] : null;
        $this->container['allow_partial_pack'] = isset($data['allow_partial_pack']) ? $data['allow_partial_pack'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets allow_packing
     *
     * @return bool
     */
    public function getAllowPacking()
    {
        return $this->container['allow_packing'];
    }

    /**
     * Sets allow_packing
     *
     * @param bool $allow_packing allow_packing
     *
     * @return $this
     */
    public function setAllowPacking($allow_packing)
    {
        $this->container['allow_packing'] = $allow_packing;

        return $this;
    }

    /**
     * Gets dimensions_uom
     *
     * @return string
     */
    public function getDimensionsUom()
    {
        return $this->container['dimensions_uom'];
    }

    /**
     * Sets dimensions_uom
     *
     * @param string $dimensions_uom dimensions_uom
     *
     * @return $this
     */
    public function setDimensionsUom($dimensions_uom)
    {
        $this->container['dimensions_uom'] = $dimensions_uom;

        return $this;
    }

    /**
     * Gets weight_uom
     *
     * @return string
     */
    public function getWeightUom()
    {
        return $this->container['weight_uom'];
    }

    /**
     * Sets weight_uom
     *
     * @param string $weight_uom weight_uom
     *
     * @return $this
     */
    public function setWeightUom($weight_uom)
    {
        $this->container['weight_uom'] = $weight_uom;

        return $this;
    }

    /**
     * Gets show_prices
     *
     * @return bool
     */
    public function getShowPrices()
    {
        return $this->container['show_prices'];
    }

    /**
     * Sets show_prices
     *
     * @param bool $show_prices show_prices
     *
     * @return $this
     */
    public function setShowPrices($show_prices)
    {
        $this->container['show_prices'] = $show_prices;

        return $this;
    }

    /**
     * Gets disable_box_add_remove
     *
     * @return bool
     */
    public function getDisableBoxAddRemove()
    {
        return $this->container['disable_box_add_remove'];
    }

    /**
     * Sets disable_box_add_remove
     *
     * @param bool $disable_box_add_remove disable_box_add_remove
     *
     * @return $this
     */
    public function setDisableBoxAddRemove($disable_box_add_remove)
    {
        $this->container['disable_box_add_remove'] = $disable_box_add_remove;

        return $this;
    }

    /**
     * Gets disable_estimate
     *
     * @return bool
     */
    public function getDisableEstimate()
    {
        return $this->container['disable_estimate'];
    }

    /**
     * Sets disable_estimate
     *
     * @param bool $disable_estimate disable_estimate
     *
     * @return $this
     */
    public function setDisableEstimate($disable_estimate)
    {
        $this->container['disable_estimate'] = $disable_estimate;

        return $this;
    }

    /**
     * Gets disable_box_editing
     *
     * @return bool
     */
    public function getDisableBoxEditing()
    {
        return $this->container['disable_box_editing'];
    }

    /**
     * Sets disable_box_editing
     *
     * @param bool $disable_box_editing disable_box_editing
     *
     * @return $this
     */
    public function setDisableBoxEditing($disable_box_editing)
    {
        $this->container['disable_box_editing'] = $disable_box_editing;

        return $this;
    }

    /**
     * Gets allow_re_import
     *
     * @return bool
     */
    public function getAllowReImport()
    {
        return $this->container['allow_re_import'];
    }

    /**
     * Sets allow_re_import
     *
     * @param bool $allow_re_import allow_re_import
     *
     * @return $this
     */
    public function setAllowReImport($allow_re_import)
    {
        $this->container['allow_re_import'] = $allow_re_import;

        return $this;
    }

    /**
     * Gets show_options
     *
     * @return bool
     */
    public function getShowOptions()
    {
        return $this->container['show_options'];
    }

    /**
     * Sets show_options
     *
     * @param bool $show_options show_options
     *
     * @return $this
     */
    public function setShowOptions($show_options)
    {
        $this->container['show_options'] = $show_options;

        return $this;
    }

    /**
     * Gets show_custom_fields
     *
     * @return bool
     */
    public function getShowCustomFields()
    {
        return $this->container['show_custom_fields'];
    }

    /**
     * Sets show_custom_fields
     *
     * @param bool $show_custom_fields show_custom_fields
     *
     * @return $this
     */
    public function setShowCustomFields($show_custom_fields)
    {
        $this->container['show_custom_fields'] = $show_custom_fields;

        return $this;
    }

    /**
     * Gets allow_partial_pack
     *
     * @return bool
     */
    public function getAllowPartialPack()
    {
        return $this->container['allow_partial_pack'];
    }

    /**
     * Sets allow_partial_pack
     *
     * @param bool $allow_partial_pack allow_partial_pack
     *
     * @return $this
     */
    public function setAllowPartialPack($allow_partial_pack)
    {
        $this->container['allow_partial_pack'] = $allow_partial_pack;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
