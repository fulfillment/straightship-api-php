<?php
/**
 * CarrierOrderRate
 *
 * PHP version 5
 *
 * @category Class
 * @package  namespace Fulfillment\StraightShip\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Techship API v3
 *
 * API regions:  US: <a href='https://api-us.techship.io/api/docs/ui/index'>https://api-us.techship.io/api/docs/ui/index</a>  CA: <a href='https://api-ca.techship.io/api/docs/ui/index'>https://api-ca.techship.io/api/docs/ui/index</a>
 *
 * OpenAPI spec version: V3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.61
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Fulfillment\StraightShip\Client\Model;

use \ArrayAccess;
use Fulfillment\StraightShip\Client\ObjectSerializer;

/**
 * CarrierOrderRate Class Doc Comment
 *
 * @category Class
 * @package  namespace Fulfillment\StraightShip\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CarrierOrderRate implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CarrierOrderRate';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'service_code' => 'string',
        'service_code_aliases' => 'string[]',
        'external_service_code' => 'string',
        'service_name' => 'string',
        'public_base_amount' => 'double',
        'base_amount' => 'double',
        'amount' => 'double',
        'public_amount' => 'double',
        'fuel_surcharge' => 'double',
        'public_fuel_surcharge' => 'double',
        'tax_amount' => 'double',
        'public_tax_amount' => 'double',
        'zone_skipping' => 'double',
        'fee_markup' => 'double',
        'total_amount' => 'double',
        'public_total_amount' => 'double',
        'priority' => 'int',
        'alternate_amount' => 'double',
        'alternate_total_amount' => 'double',
        'alternate_rate_shopping_amount' => 'double',
        'rate_shopping_sort_amount' => 'double',
        'use_alternate_rate' => 'bool',
        'rate_shopping_amount' => 'double',
        'billing_account_client_id' => 'int',
        'billing_account_id' => 'int',
        'carrier_id' => 'int',
        'billing_account_client_name' => 'string',
        'billing_account_name' => 'string',
        'carrier_name' => 'string',
        'scac' => 'string',
        'shipping_service_offer_ids' => 'string[]',
        'amazon_carrier_name' => 'string',
        'amazon_carrier_id' => 'string',
        'quote_id' => 'string',
        'expected_delivery_date' => 'string',
        'zone' => 'string',
        'expected_delivery_days' => 'int',
        'elapsed_carrier_api_time' => 'double',
        'currency' => 'string',
        'is_best' => 'bool',
        'carrier_surcharges' => 'map[string,double]',
        'public_carrier_surcharges' => 'map[string,double]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'service_code' => null,
        'service_code_aliases' => null,
        'external_service_code' => null,
        'service_name' => null,
        'public_base_amount' => 'double',
        'base_amount' => 'double',
        'amount' => 'double',
        'public_amount' => 'double',
        'fuel_surcharge' => 'double',
        'public_fuel_surcharge' => 'double',
        'tax_amount' => 'double',
        'public_tax_amount' => 'double',
        'zone_skipping' => 'double',
        'fee_markup' => 'double',
        'total_amount' => 'double',
        'public_total_amount' => 'double',
        'priority' => 'int32',
        'alternate_amount' => 'double',
        'alternate_total_amount' => 'double',
        'alternate_rate_shopping_amount' => 'double',
        'rate_shopping_sort_amount' => 'double',
        'use_alternate_rate' => null,
        'rate_shopping_amount' => 'double',
        'billing_account_client_id' => 'int32',
        'billing_account_id' => 'int32',
        'carrier_id' => 'int32',
        'billing_account_client_name' => null,
        'billing_account_name' => null,
        'carrier_name' => null,
        'scac' => null,
        'shipping_service_offer_ids' => null,
        'amazon_carrier_name' => null,
        'amazon_carrier_id' => null,
        'quote_id' => null,
        'expected_delivery_date' => null,
        'zone' => null,
        'expected_delivery_days' => 'int32',
        'elapsed_carrier_api_time' => 'double',
        'currency' => null,
        'is_best' => null,
        'carrier_surcharges' => 'double',
        'public_carrier_surcharges' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'service_code' => 'ServiceCode',
        'service_code_aliases' => 'ServiceCodeAliases',
        'external_service_code' => 'ExternalServiceCode',
        'service_name' => 'ServiceName',
        'public_base_amount' => 'PublicBaseAmount',
        'base_amount' => 'BaseAmount',
        'amount' => 'Amount',
        'public_amount' => 'PublicAmount',
        'fuel_surcharge' => 'FuelSurcharge',
        'public_fuel_surcharge' => 'PublicFuelSurcharge',
        'tax_amount' => 'TaxAmount',
        'public_tax_amount' => 'PublicTaxAmount',
        'zone_skipping' => 'ZoneSkipping',
        'fee_markup' => 'FeeMarkup',
        'total_amount' => 'TotalAmount',
        'public_total_amount' => 'PublicTotalAmount',
        'priority' => 'Priority',
        'alternate_amount' => 'AlternateAmount',
        'alternate_total_amount' => 'AlternateTotalAmount',
        'alternate_rate_shopping_amount' => 'AlternateRateShoppingAmount',
        'rate_shopping_sort_amount' => 'RateShoppingSortAmount',
        'use_alternate_rate' => 'UseAlternateRate',
        'rate_shopping_amount' => 'RateShoppingAmount',
        'billing_account_client_id' => 'BillingAccountClientId',
        'billing_account_id' => 'BillingAccountId',
        'carrier_id' => 'CarrierId',
        'billing_account_client_name' => 'BillingAccountClientName',
        'billing_account_name' => 'BillingAccountName',
        'carrier_name' => 'CarrierName',
        'scac' => 'SCAC',
        'shipping_service_offer_ids' => 'ShippingServiceOfferIds',
        'amazon_carrier_name' => 'AmazonCarrierName',
        'amazon_carrier_id' => 'AmazonCarrierId',
        'quote_id' => 'QuoteId',
        'expected_delivery_date' => 'ExpectedDeliveryDate',
        'zone' => 'Zone',
        'expected_delivery_days' => 'ExpectedDeliveryDays',
        'elapsed_carrier_api_time' => 'ElapsedCarrierApiTime',
        'currency' => 'Currency',
        'is_best' => 'IsBest',
        'carrier_surcharges' => 'CarrierSurcharges',
        'public_carrier_surcharges' => 'PublicCarrierSurcharges'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'service_code' => 'setServiceCode',
        'service_code_aliases' => 'setServiceCodeAliases',
        'external_service_code' => 'setExternalServiceCode',
        'service_name' => 'setServiceName',
        'public_base_amount' => 'setPublicBaseAmount',
        'base_amount' => 'setBaseAmount',
        'amount' => 'setAmount',
        'public_amount' => 'setPublicAmount',
        'fuel_surcharge' => 'setFuelSurcharge',
        'public_fuel_surcharge' => 'setPublicFuelSurcharge',
        'tax_amount' => 'setTaxAmount',
        'public_tax_amount' => 'setPublicTaxAmount',
        'zone_skipping' => 'setZoneSkipping',
        'fee_markup' => 'setFeeMarkup',
        'total_amount' => 'setTotalAmount',
        'public_total_amount' => 'setPublicTotalAmount',
        'priority' => 'setPriority',
        'alternate_amount' => 'setAlternateAmount',
        'alternate_total_amount' => 'setAlternateTotalAmount',
        'alternate_rate_shopping_amount' => 'setAlternateRateShoppingAmount',
        'rate_shopping_sort_amount' => 'setRateShoppingSortAmount',
        'use_alternate_rate' => 'setUseAlternateRate',
        'rate_shopping_amount' => 'setRateShoppingAmount',
        'billing_account_client_id' => 'setBillingAccountClientId',
        'billing_account_id' => 'setBillingAccountId',
        'carrier_id' => 'setCarrierId',
        'billing_account_client_name' => 'setBillingAccountClientName',
        'billing_account_name' => 'setBillingAccountName',
        'carrier_name' => 'setCarrierName',
        'scac' => 'setScac',
        'shipping_service_offer_ids' => 'setShippingServiceOfferIds',
        'amazon_carrier_name' => 'setAmazonCarrierName',
        'amazon_carrier_id' => 'setAmazonCarrierId',
        'quote_id' => 'setQuoteId',
        'expected_delivery_date' => 'setExpectedDeliveryDate',
        'zone' => 'setZone',
        'expected_delivery_days' => 'setExpectedDeliveryDays',
        'elapsed_carrier_api_time' => 'setElapsedCarrierApiTime',
        'currency' => 'setCurrency',
        'is_best' => 'setIsBest',
        'carrier_surcharges' => 'setCarrierSurcharges',
        'public_carrier_surcharges' => 'setPublicCarrierSurcharges'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'service_code' => 'getServiceCode',
        'service_code_aliases' => 'getServiceCodeAliases',
        'external_service_code' => 'getExternalServiceCode',
        'service_name' => 'getServiceName',
        'public_base_amount' => 'getPublicBaseAmount',
        'base_amount' => 'getBaseAmount',
        'amount' => 'getAmount',
        'public_amount' => 'getPublicAmount',
        'fuel_surcharge' => 'getFuelSurcharge',
        'public_fuel_surcharge' => 'getPublicFuelSurcharge',
        'tax_amount' => 'getTaxAmount',
        'public_tax_amount' => 'getPublicTaxAmount',
        'zone_skipping' => 'getZoneSkipping',
        'fee_markup' => 'getFeeMarkup',
        'total_amount' => 'getTotalAmount',
        'public_total_amount' => 'getPublicTotalAmount',
        'priority' => 'getPriority',
        'alternate_amount' => 'getAlternateAmount',
        'alternate_total_amount' => 'getAlternateTotalAmount',
        'alternate_rate_shopping_amount' => 'getAlternateRateShoppingAmount',
        'rate_shopping_sort_amount' => 'getRateShoppingSortAmount',
        'use_alternate_rate' => 'getUseAlternateRate',
        'rate_shopping_amount' => 'getRateShoppingAmount',
        'billing_account_client_id' => 'getBillingAccountClientId',
        'billing_account_id' => 'getBillingAccountId',
        'carrier_id' => 'getCarrierId',
        'billing_account_client_name' => 'getBillingAccountClientName',
        'billing_account_name' => 'getBillingAccountName',
        'carrier_name' => 'getCarrierName',
        'scac' => 'getScac',
        'shipping_service_offer_ids' => 'getShippingServiceOfferIds',
        'amazon_carrier_name' => 'getAmazonCarrierName',
        'amazon_carrier_id' => 'getAmazonCarrierId',
        'quote_id' => 'getQuoteId',
        'expected_delivery_date' => 'getExpectedDeliveryDate',
        'zone' => 'getZone',
        'expected_delivery_days' => 'getExpectedDeliveryDays',
        'elapsed_carrier_api_time' => 'getElapsedCarrierApiTime',
        'currency' => 'getCurrency',
        'is_best' => 'getIsBest',
        'carrier_surcharges' => 'getCarrierSurcharges',
        'public_carrier_surcharges' => 'getPublicCarrierSurcharges'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['service_code'] = isset($data['service_code']) ? $data['service_code'] : null;
        $this->container['service_code_aliases'] = isset($data['service_code_aliases']) ? $data['service_code_aliases'] : null;
        $this->container['external_service_code'] = isset($data['external_service_code']) ? $data['external_service_code'] : null;
        $this->container['service_name'] = isset($data['service_name']) ? $data['service_name'] : null;
        $this->container['public_base_amount'] = isset($data['public_base_amount']) ? $data['public_base_amount'] : null;
        $this->container['base_amount'] = isset($data['base_amount']) ? $data['base_amount'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['public_amount'] = isset($data['public_amount']) ? $data['public_amount'] : null;
        $this->container['fuel_surcharge'] = isset($data['fuel_surcharge']) ? $data['fuel_surcharge'] : null;
        $this->container['public_fuel_surcharge'] = isset($data['public_fuel_surcharge']) ? $data['public_fuel_surcharge'] : null;
        $this->container['tax_amount'] = isset($data['tax_amount']) ? $data['tax_amount'] : null;
        $this->container['public_tax_amount'] = isset($data['public_tax_amount']) ? $data['public_tax_amount'] : null;
        $this->container['zone_skipping'] = isset($data['zone_skipping']) ? $data['zone_skipping'] : null;
        $this->container['fee_markup'] = isset($data['fee_markup']) ? $data['fee_markup'] : null;
        $this->container['total_amount'] = isset($data['total_amount']) ? $data['total_amount'] : null;
        $this->container['public_total_amount'] = isset($data['public_total_amount']) ? $data['public_total_amount'] : null;
        $this->container['priority'] = isset($data['priority']) ? $data['priority'] : null;
        $this->container['alternate_amount'] = isset($data['alternate_amount']) ? $data['alternate_amount'] : null;
        $this->container['alternate_total_amount'] = isset($data['alternate_total_amount']) ? $data['alternate_total_amount'] : null;
        $this->container['alternate_rate_shopping_amount'] = isset($data['alternate_rate_shopping_amount']) ? $data['alternate_rate_shopping_amount'] : null;
        $this->container['rate_shopping_sort_amount'] = isset($data['rate_shopping_sort_amount']) ? $data['rate_shopping_sort_amount'] : null;
        $this->container['use_alternate_rate'] = isset($data['use_alternate_rate']) ? $data['use_alternate_rate'] : null;
        $this->container['rate_shopping_amount'] = isset($data['rate_shopping_amount']) ? $data['rate_shopping_amount'] : null;
        $this->container['billing_account_client_id'] = isset($data['billing_account_client_id']) ? $data['billing_account_client_id'] : null;
        $this->container['billing_account_id'] = isset($data['billing_account_id']) ? $data['billing_account_id'] : null;
        $this->container['carrier_id'] = isset($data['carrier_id']) ? $data['carrier_id'] : null;
        $this->container['billing_account_client_name'] = isset($data['billing_account_client_name']) ? $data['billing_account_client_name'] : null;
        $this->container['billing_account_name'] = isset($data['billing_account_name']) ? $data['billing_account_name'] : null;
        $this->container['carrier_name'] = isset($data['carrier_name']) ? $data['carrier_name'] : null;
        $this->container['scac'] = isset($data['scac']) ? $data['scac'] : null;
        $this->container['shipping_service_offer_ids'] = isset($data['shipping_service_offer_ids']) ? $data['shipping_service_offer_ids'] : null;
        $this->container['amazon_carrier_name'] = isset($data['amazon_carrier_name']) ? $data['amazon_carrier_name'] : null;
        $this->container['amazon_carrier_id'] = isset($data['amazon_carrier_id']) ? $data['amazon_carrier_id'] : null;
        $this->container['quote_id'] = isset($data['quote_id']) ? $data['quote_id'] : null;
        $this->container['expected_delivery_date'] = isset($data['expected_delivery_date']) ? $data['expected_delivery_date'] : null;
        $this->container['zone'] = isset($data['zone']) ? $data['zone'] : null;
        $this->container['expected_delivery_days'] = isset($data['expected_delivery_days']) ? $data['expected_delivery_days'] : null;
        $this->container['elapsed_carrier_api_time'] = isset($data['elapsed_carrier_api_time']) ? $data['elapsed_carrier_api_time'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['is_best'] = isset($data['is_best']) ? $data['is_best'] : null;
        $this->container['carrier_surcharges'] = isset($data['carrier_surcharges']) ? $data['carrier_surcharges'] : null;
        $this->container['public_carrier_surcharges'] = isset($data['public_carrier_surcharges']) ? $data['public_carrier_surcharges'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets service_code
     *
     * @return string
     */
    public function getServiceCode()
    {
        return $this->container['service_code'];
    }

    /**
     * Sets service_code
     *
     * @param string $service_code service_code
     *
     * @return $this
     */
    public function setServiceCode($service_code)
    {
        $this->container['service_code'] = $service_code;

        return $this;
    }

    /**
     * Gets service_code_aliases
     *
     * @return string[]
     */
    public function getServiceCodeAliases()
    {
        return $this->container['service_code_aliases'];
    }

    /**
     * Sets service_code_aliases
     *
     * @param string[] $service_code_aliases service_code_aliases
     *
     * @return $this
     */
    public function setServiceCodeAliases($service_code_aliases)
    {
        $this->container['service_code_aliases'] = $service_code_aliases;

        return $this;
    }

    /**
     * Gets external_service_code
     *
     * @return string
     */
    public function getExternalServiceCode()
    {
        return $this->container['external_service_code'];
    }

    /**
     * Sets external_service_code
     *
     * @param string $external_service_code external_service_code
     *
     * @return $this
     */
    public function setExternalServiceCode($external_service_code)
    {
        $this->container['external_service_code'] = $external_service_code;

        return $this;
    }

    /**
     * Gets service_name
     *
     * @return string
     */
    public function getServiceName()
    {
        return $this->container['service_name'];
    }

    /**
     * Sets service_name
     *
     * @param string $service_name service_name
     *
     * @return $this
     */
    public function setServiceName($service_name)
    {
        $this->container['service_name'] = $service_name;

        return $this;
    }

    /**
     * Gets public_base_amount
     *
     * @return double
     */
    public function getPublicBaseAmount()
    {
        return $this->container['public_base_amount'];
    }

    /**
     * Sets public_base_amount
     *
     * @param double $public_base_amount public_base_amount
     *
     * @return $this
     */
    public function setPublicBaseAmount($public_base_amount)
    {
        $this->container['public_base_amount'] = $public_base_amount;

        return $this;
    }

    /**
     * Gets base_amount
     *
     * @return double
     */
    public function getBaseAmount()
    {
        return $this->container['base_amount'];
    }

    /**
     * Sets base_amount
     *
     * @param double $base_amount base_amount
     *
     * @return $this
     */
    public function setBaseAmount($base_amount)
    {
        $this->container['base_amount'] = $base_amount;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount amount
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets public_amount
     *
     * @return double
     */
    public function getPublicAmount()
    {
        return $this->container['public_amount'];
    }

    /**
     * Sets public_amount
     *
     * @param double $public_amount public_amount
     *
     * @return $this
     */
    public function setPublicAmount($public_amount)
    {
        $this->container['public_amount'] = $public_amount;

        return $this;
    }

    /**
     * Gets fuel_surcharge
     *
     * @return double
     */
    public function getFuelSurcharge()
    {
        return $this->container['fuel_surcharge'];
    }

    /**
     * Sets fuel_surcharge
     *
     * @param double $fuel_surcharge fuel_surcharge
     *
     * @return $this
     */
    public function setFuelSurcharge($fuel_surcharge)
    {
        $this->container['fuel_surcharge'] = $fuel_surcharge;

        return $this;
    }

    /**
     * Gets public_fuel_surcharge
     *
     * @return double
     */
    public function getPublicFuelSurcharge()
    {
        return $this->container['public_fuel_surcharge'];
    }

    /**
     * Sets public_fuel_surcharge
     *
     * @param double $public_fuel_surcharge public_fuel_surcharge
     *
     * @return $this
     */
    public function setPublicFuelSurcharge($public_fuel_surcharge)
    {
        $this->container['public_fuel_surcharge'] = $public_fuel_surcharge;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return double
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param double $tax_amount tax_amount
     *
     * @return $this
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets public_tax_amount
     *
     * @return double
     */
    public function getPublicTaxAmount()
    {
        return $this->container['public_tax_amount'];
    }

    /**
     * Sets public_tax_amount
     *
     * @param double $public_tax_amount public_tax_amount
     *
     * @return $this
     */
    public function setPublicTaxAmount($public_tax_amount)
    {
        $this->container['public_tax_amount'] = $public_tax_amount;

        return $this;
    }

    /**
     * Gets zone_skipping
     *
     * @return double
     */
    public function getZoneSkipping()
    {
        return $this->container['zone_skipping'];
    }

    /**
     * Sets zone_skipping
     *
     * @param double $zone_skipping zone_skipping
     *
     * @return $this
     */
    public function setZoneSkipping($zone_skipping)
    {
        $this->container['zone_skipping'] = $zone_skipping;

        return $this;
    }

    /**
     * Gets fee_markup
     *
     * @return double
     */
    public function getFeeMarkup()
    {
        return $this->container['fee_markup'];
    }

    /**
     * Sets fee_markup
     *
     * @param double $fee_markup fee_markup
     *
     * @return $this
     */
    public function setFeeMarkup($fee_markup)
    {
        $this->container['fee_markup'] = $fee_markup;

        return $this;
    }

    /**
     * Gets total_amount
     *
     * @return double
     */
    public function getTotalAmount()
    {
        return $this->container['total_amount'];
    }

    /**
     * Sets total_amount
     *
     * @param double $total_amount total_amount
     *
     * @return $this
     */
    public function setTotalAmount($total_amount)
    {
        $this->container['total_amount'] = $total_amount;

        return $this;
    }

    /**
     * Gets public_total_amount
     *
     * @return double
     */
    public function getPublicTotalAmount()
    {
        return $this->container['public_total_amount'];
    }

    /**
     * Sets public_total_amount
     *
     * @param double $public_total_amount public_total_amount
     *
     * @return $this
     */
    public function setPublicTotalAmount($public_total_amount)
    {
        $this->container['public_total_amount'] = $public_total_amount;

        return $this;
    }

    /**
     * Gets priority
     *
     * @return int
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     *
     * @param int $priority if 2 services have same price, determines which is better to use
     *
     * @return $this
     */
    public function setPriority($priority)
    {
        $this->container['priority'] = $priority;

        return $this;
    }

    /**
     * Gets alternate_amount
     *
     * @return double
     */
    public function getAlternateAmount()
    {
        return $this->container['alternate_amount'];
    }

    /**
     * Sets alternate_amount
     *
     * @param double $alternate_amount alternate_amount
     *
     * @return $this
     */
    public function setAlternateAmount($alternate_amount)
    {
        $this->container['alternate_amount'] = $alternate_amount;

        return $this;
    }

    /**
     * Gets alternate_total_amount
     *
     * @return double
     */
    public function getAlternateTotalAmount()
    {
        return $this->container['alternate_total_amount'];
    }

    /**
     * Sets alternate_total_amount
     *
     * @param double $alternate_total_amount alternate_total_amount
     *
     * @return $this
     */
    public function setAlternateTotalAmount($alternate_total_amount)
    {
        $this->container['alternate_total_amount'] = $alternate_total_amount;

        return $this;
    }

    /**
     * Gets alternate_rate_shopping_amount
     *
     * @return double
     */
    public function getAlternateRateShoppingAmount()
    {
        return $this->container['alternate_rate_shopping_amount'];
    }

    /**
     * Sets alternate_rate_shopping_amount
     *
     * @param double $alternate_rate_shopping_amount alternate_rate_shopping_amount
     *
     * @return $this
     */
    public function setAlternateRateShoppingAmount($alternate_rate_shopping_amount)
    {
        $this->container['alternate_rate_shopping_amount'] = $alternate_rate_shopping_amount;

        return $this;
    }

    /**
     * Gets rate_shopping_sort_amount
     *
     * @return double
     */
    public function getRateShoppingSortAmount()
    {
        return $this->container['rate_shopping_sort_amount'];
    }

    /**
     * Sets rate_shopping_sort_amount
     *
     * @param double $rate_shopping_sort_amount rate_shopping_sort_amount
     *
     * @return $this
     */
    public function setRateShoppingSortAmount($rate_shopping_sort_amount)
    {
        $this->container['rate_shopping_sort_amount'] = $rate_shopping_sort_amount;

        return $this;
    }

    /**
     * Gets use_alternate_rate
     *
     * @return bool
     */
    public function getUseAlternateRate()
    {
        return $this->container['use_alternate_rate'];
    }

    /**
     * Sets use_alternate_rate
     *
     * @param bool $use_alternate_rate use_alternate_rate
     *
     * @return $this
     */
    public function setUseAlternateRate($use_alternate_rate)
    {
        $this->container['use_alternate_rate'] = $use_alternate_rate;

        return $this;
    }

    /**
     * Gets rate_shopping_amount
     *
     * @return double
     */
    public function getRateShoppingAmount()
    {
        return $this->container['rate_shopping_amount'];
    }

    /**
     * Sets rate_shopping_amount
     *
     * @param double $rate_shopping_amount rate_shopping_amount
     *
     * @return $this
     */
    public function setRateShoppingAmount($rate_shopping_amount)
    {
        $this->container['rate_shopping_amount'] = $rate_shopping_amount;

        return $this;
    }

    /**
     * Gets billing_account_client_id
     *
     * @return int
     */
    public function getBillingAccountClientId()
    {
        return $this->container['billing_account_client_id'];
    }

    /**
     * Sets billing_account_client_id
     *
     * @param int $billing_account_client_id billing_account_client_id
     *
     * @return $this
     */
    public function setBillingAccountClientId($billing_account_client_id)
    {
        $this->container['billing_account_client_id'] = $billing_account_client_id;

        return $this;
    }

    /**
     * Gets billing_account_id
     *
     * @return int
     */
    public function getBillingAccountId()
    {
        return $this->container['billing_account_id'];
    }

    /**
     * Sets billing_account_id
     *
     * @param int $billing_account_id billing_account_id
     *
     * @return $this
     */
    public function setBillingAccountId($billing_account_id)
    {
        $this->container['billing_account_id'] = $billing_account_id;

        return $this;
    }

    /**
     * Gets carrier_id
     *
     * @return int
     */
    public function getCarrierId()
    {
        return $this->container['carrier_id'];
    }

    /**
     * Sets carrier_id
     *
     * @param int $carrier_id carrier_id
     *
     * @return $this
     */
    public function setCarrierId($carrier_id)
    {
        $this->container['carrier_id'] = $carrier_id;

        return $this;
    }

    /**
     * Gets billing_account_client_name
     *
     * @return string
     */
    public function getBillingAccountClientName()
    {
        return $this->container['billing_account_client_name'];
    }

    /**
     * Sets billing_account_client_name
     *
     * @param string $billing_account_client_name billing_account_client_name
     *
     * @return $this
     */
    public function setBillingAccountClientName($billing_account_client_name)
    {
        $this->container['billing_account_client_name'] = $billing_account_client_name;

        return $this;
    }

    /**
     * Gets billing_account_name
     *
     * @return string
     */
    public function getBillingAccountName()
    {
        return $this->container['billing_account_name'];
    }

    /**
     * Sets billing_account_name
     *
     * @param string $billing_account_name billing_account_name
     *
     * @return $this
     */
    public function setBillingAccountName($billing_account_name)
    {
        $this->container['billing_account_name'] = $billing_account_name;

        return $this;
    }

    /**
     * Gets carrier_name
     *
     * @return string
     */
    public function getCarrierName()
    {
        return $this->container['carrier_name'];
    }

    /**
     * Sets carrier_name
     *
     * @param string $carrier_name carrier_name
     *
     * @return $this
     */
    public function setCarrierName($carrier_name)
    {
        $this->container['carrier_name'] = $carrier_name;

        return $this;
    }

    /**
     * Gets scac
     *
     * @return string
     */
    public function getScac()
    {
        return $this->container['scac'];
    }

    /**
     * Sets scac
     *
     * @param string $scac scac
     *
     * @return $this
     */
    public function setScac($scac)
    {
        $this->container['scac'] = $scac;

        return $this;
    }

    /**
     * Gets shipping_service_offer_ids
     *
     * @return string[]
     */
    public function getShippingServiceOfferIds()
    {
        return $this->container['shipping_service_offer_ids'];
    }

    /**
     * Sets shipping_service_offer_ids
     *
     * @param string[] $shipping_service_offer_ids shipping_service_offer_ids
     *
     * @return $this
     */
    public function setShippingServiceOfferIds($shipping_service_offer_ids)
    {
        $this->container['shipping_service_offer_ids'] = $shipping_service_offer_ids;

        return $this;
    }

    /**
     * Gets amazon_carrier_name
     *
     * @return string
     */
    public function getAmazonCarrierName()
    {
        return $this->container['amazon_carrier_name'];
    }

    /**
     * Sets amazon_carrier_name
     *
     * @param string $amazon_carrier_name amazon_carrier_name
     *
     * @return $this
     */
    public function setAmazonCarrierName($amazon_carrier_name)
    {
        $this->container['amazon_carrier_name'] = $amazon_carrier_name;

        return $this;
    }

    /**
     * Gets amazon_carrier_id
     *
     * @return string
     */
    public function getAmazonCarrierId()
    {
        return $this->container['amazon_carrier_id'];
    }

    /**
     * Sets amazon_carrier_id
     *
     * @param string $amazon_carrier_id amazon_carrier_id
     *
     * @return $this
     */
    public function setAmazonCarrierId($amazon_carrier_id)
    {
        $this->container['amazon_carrier_id'] = $amazon_carrier_id;

        return $this;
    }

    /**
     * Gets quote_id
     *
     * @return string
     */
    public function getQuoteId()
    {
        return $this->container['quote_id'];
    }

    /**
     * Sets quote_id
     *
     * @param string $quote_id quote_id
     *
     * @return $this
     */
    public function setQuoteId($quote_id)
    {
        $this->container['quote_id'] = $quote_id;

        return $this;
    }

    /**
     * Gets expected_delivery_date
     *
     * @return string
     */
    public function getExpectedDeliveryDate()
    {
        return $this->container['expected_delivery_date'];
    }

    /**
     * Sets expected_delivery_date
     *
     * @param string $expected_delivery_date expected_delivery_date
     *
     * @return $this
     */
    public function setExpectedDeliveryDate($expected_delivery_date)
    {
        $this->container['expected_delivery_date'] = $expected_delivery_date;

        return $this;
    }

    /**
     * Gets zone
     *
     * @return string
     */
    public function getZone()
    {
        return $this->container['zone'];
    }

    /**
     * Sets zone
     *
     * @param string $zone zone
     *
     * @return $this
     */
    public function setZone($zone)
    {
        $this->container['zone'] = $zone;

        return $this;
    }

    /**
     * Gets expected_delivery_days
     *
     * @return int
     */
    public function getExpectedDeliveryDays()
    {
        return $this->container['expected_delivery_days'];
    }

    /**
     * Sets expected_delivery_days
     *
     * @param int $expected_delivery_days expected_delivery_days
     *
     * @return $this
     */
    public function setExpectedDeliveryDays($expected_delivery_days)
    {
        $this->container['expected_delivery_days'] = $expected_delivery_days;

        return $this;
    }

    /**
     * Gets elapsed_carrier_api_time
     *
     * @return double
     */
    public function getElapsedCarrierApiTime()
    {
        return $this->container['elapsed_carrier_api_time'];
    }

    /**
     * Sets elapsed_carrier_api_time
     *
     * @param double $elapsed_carrier_api_time elapsed_carrier_api_time
     *
     * @return $this
     */
    public function setElapsedCarrierApiTime($elapsed_carrier_api_time)
    {
        $this->container['elapsed_carrier_api_time'] = $elapsed_carrier_api_time;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets is_best
     *
     * @return bool
     */
    public function getIsBest()
    {
        return $this->container['is_best'];
    }

    /**
     * Sets is_best
     *
     * @param bool $is_best is_best
     *
     * @return $this
     */
    public function setIsBest($is_best)
    {
        $this->container['is_best'] = $is_best;

        return $this;
    }

    /**
     * Gets carrier_surcharges
     *
     * @return map[string,double]
     */
    public function getCarrierSurcharges()
    {
        return $this->container['carrier_surcharges'];
    }

    /**
     * Sets carrier_surcharges
     *
     * @param map[string,double] $carrier_surcharges carrier_surcharges
     *
     * @return $this
     */
    public function setCarrierSurcharges($carrier_surcharges)
    {
        $this->container['carrier_surcharges'] = $carrier_surcharges;

        return $this;
    }

    /**
     * Gets public_carrier_surcharges
     *
     * @return map[string,double]
     */
    public function getPublicCarrierSurcharges()
    {
        return $this->container['public_carrier_surcharges'];
    }

    /**
     * Sets public_carrier_surcharges
     *
     * @param map[string,double] $public_carrier_surcharges public_carrier_surcharges
     *
     * @return $this
     */
    public function setPublicCarrierSurcharges($public_carrier_surcharges)
    {
        $this->container['public_carrier_surcharges'] = $public_carrier_surcharges;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
