<?php
/**
 * Package
 *
 * PHP version 5
 *
 * @category Class
 * @package  namespace Fulfillment\StraightShip\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Techship API v3
 *
 * API regions:  US: <a href='https://api-us.techship.io/api/docs/ui/index'>https://api-us.techship.io/api/docs/ui/index</a>  CA: <a href='https://api-ca.techship.io/api/docs/ui/index'>https://api-ca.techship.io/api/docs/ui/index</a>
 *
 * OpenAPI spec version: V3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.61
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Fulfillment\StraightShip\Client\Model;

use \ArrayAccess;
use Fulfillment\StraightShip\Client\ObjectSerializer;
use Fulfillment\StraightShip\Client\Model\PackageOptions;
use Fulfillment\StraightShip\Client\Model\PackageDetails;
use Fulfillment\StraightShip\Client\Model\BatteriesInfo;
use Fulfillment\StraightShip\Client\Model\Dimensions;
use Fulfillment\StraightShip\Client\Model\PackageFreightCharge;

/**
 * Package Class Doc Comment
 *
 * @category Class
 * @package  namespace Fulfillment\StraightShip\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Package implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Package';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'tracking_number' => 'string',
        'extended_tracking_number' => 'string',
        'tracking_url' => 'string',
        'items' => 'Fulfillment\StraightShip\Client\Model\PackageItem[]',
        'labels' => 'Fulfillment\StraightShip\Client\Model\Label[]',
        'packing_slips' => 'Fulfillment\StraightShip\Client\Model\Label[]',
        'description' => 'string',
        'sequence_number' => 'int',
        'custom_fields' => 'Fulfillment\StraightShip\Client\Model\CustomField[]',
        'user_documents' => 'Fulfillment\StraightShip\Client\Model\UserDocument[]',
        'weight' => 'double',
        'commodity_description' => 'string',
        'id' => 'int',
        'package_freight_charge' => PackageFreightCharge::class,
        'weight_uom' => 'string',
        'metro_scg_carton_id' => 'string',
        'dimensions' => Dimensions::class,
        'batteries_info' => BatteriesInfo::class,
        'package_details' => PackageDetails::class,
        'package_options' => PackageOptions::class
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'tracking_number' => null,
        'extended_tracking_number' => null,
        'tracking_url' => null,
        'items' => null,
        'labels' => null,
        'packing_slips' => null,
        'description' => null,
        'sequence_number' => 'int32',
        'custom_fields' => null,
        'user_documents' => null,
        'weight' => 'double',
        'commodity_description' => null,
        'id' => 'int64',
        'package_freight_charge' => null,
        'weight_uom' => null,
        'metro_scg_carton_id' => null,
        'dimensions' => null,
        'batteries_info' => null,
        'package_details' => null,
        'package_options' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tracking_number' => 'TrackingNumber',
        'extended_tracking_number' => 'ExtendedTrackingNumber',
        'tracking_url' => 'TrackingUrl',
        'items' => 'Items',
        'labels' => 'Labels',
        'packing_slips' => 'PackingSlips',
        'description' => 'Description',
        'sequence_number' => 'SequenceNumber',
        'custom_fields' => 'CustomFields',
        'user_documents' => 'UserDocuments',
        'weight' => 'Weight',
        'commodity_description' => 'CommodityDescription',
        'id' => 'Id',
        'package_freight_charge' => 'PackageFreightCharge',
        'weight_uom' => 'WeightUOM',
        'metro_scg_carton_id' => 'MetroSCGCartonId',
        'dimensions' => 'Dimensions',
        'batteries_info' => 'BatteriesInfo',
        'package_details' => 'PackageDetails',
        'package_options' => 'PackageOptions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tracking_number' => 'setTrackingNumber',
        'extended_tracking_number' => 'setExtendedTrackingNumber',
        'tracking_url' => 'setTrackingUrl',
        'items' => 'setItems',
        'labels' => 'setLabels',
        'packing_slips' => 'setPackingSlips',
        'description' => 'setDescription',
        'sequence_number' => 'setSequenceNumber',
        'custom_fields' => 'setCustomFields',
        'user_documents' => 'setUserDocuments',
        'weight' => 'setWeight',
        'commodity_description' => 'setCommodityDescription',
        'id' => 'setId',
        'package_freight_charge' => 'setPackageFreightCharge',
        'weight_uom' => 'setWeightUom',
        'metro_scg_carton_id' => 'setMetroScgCartonId',
        'dimensions' => 'setDimensions',
        'batteries_info' => 'setBatteriesInfo',
        'package_details' => 'setPackageDetails',
        'package_options' => 'setPackageOptions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tracking_number' => 'getTrackingNumber',
        'extended_tracking_number' => 'getExtendedTrackingNumber',
        'tracking_url' => 'getTrackingUrl',
        'items' => 'getItems',
        'labels' => 'getLabels',
        'packing_slips' => 'getPackingSlips',
        'description' => 'getDescription',
        'sequence_number' => 'getSequenceNumber',
        'custom_fields' => 'getCustomFields',
        'user_documents' => 'getUserDocuments',
        'weight' => 'getWeight',
        'commodity_description' => 'getCommodityDescription',
        'id' => 'getId',
        'package_freight_charge' => 'getPackageFreightCharge',
        'weight_uom' => 'getWeightUom',
        'metro_scg_carton_id' => 'getMetroScgCartonId',
        'dimensions' => 'getDimensions',
        'batteries_info' => 'getBatteriesInfo',
        'package_details' => 'getPackageDetails',
        'package_options' => 'getPackageOptions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['tracking_number'] = isset($data['tracking_number']) ? $data['tracking_number'] : null;
        $this->container['extended_tracking_number'] = isset($data['extended_tracking_number']) ? $data['extended_tracking_number'] : null;
        $this->container['tracking_url'] = isset($data['tracking_url']) ? $data['tracking_url'] : null;
        $this->container['items'] = isset($data['items']) ? $data['items'] : null;
        $this->container['labels'] = isset($data['labels']) ? $data['labels'] : null;
        $this->container['packing_slips'] = isset($data['packing_slips']) ? $data['packing_slips'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['sequence_number'] = isset($data['sequence_number']) ? $data['sequence_number'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
        $this->container['user_documents'] = isset($data['user_documents']) ? $data['user_documents'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['commodity_description'] = isset($data['commodity_description']) ? $data['commodity_description'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['package_freight_charge'] = isset($data['package_freight_charge']) ? $data['package_freight_charge'] : null;
        $this->container['weight_uom'] = isset($data['weight_uom']) ? $data['weight_uom'] : null;
        $this->container['metro_scg_carton_id'] = isset($data['metro_scg_carton_id']) ? $data['metro_scg_carton_id'] : null;
        $this->container['dimensions'] = isset($data['dimensions']) ? $data['dimensions'] : null;
        $this->container['batteries_info'] = isset($data['batteries_info']) ? $data['batteries_info'] : null;
        $this->container['package_details'] = isset($data['package_details']) ? $data['package_details'] : null;
        $this->container['package_options'] = isset($data['package_options']) ? $data['package_options'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tracking_number
     *
     * @return string
     */
    public function getTrackingNumber()
    {
        return $this->container['tracking_number'];
    }

    /**
     * Sets tracking_number
     *
     * @param string $tracking_number Tracking number for package.
     *
     * @return $this
     */
    public function setTrackingNumber($tracking_number)
    {
        $this->container['tracking_number'] = $tracking_number;

        return $this;
    }

    /**
     * Gets extended_tracking_number
     *
     * @return string
     */
    public function getExtendedTrackingNumber()
    {
        return $this->container['extended_tracking_number'];
    }

    /**
     * Sets extended_tracking_number
     *
     * @param string $extended_tracking_number Extended tracking number.
     *
     * @return $this
     */
    public function setExtendedTrackingNumber($extended_tracking_number)
    {
        $this->container['extended_tracking_number'] = $extended_tracking_number;

        return $this;
    }

    /**
     * Gets tracking_url
     *
     * @return string
     */
    public function getTrackingUrl()
    {
        return $this->container['tracking_url'];
    }

    /**
     * Sets tracking_url
     *
     * @param string $tracking_url Tracking url (if available or configured on carrier setup).
     *
     * @return $this
     */
    public function setTrackingUrl($tracking_url)
    {
        $this->container['tracking_url'] = $tracking_url;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \Fulfillment\StraightShip\Client\Model\PackageItem[]
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \Fulfillment\StraightShip\Client\Model\PackageItem[] $items Package contents (for international shipments or packing slips)
     *
     * @return $this
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets labels
     *
     * @return \Fulfillment\StraightShip\Client\Model\Label[]
     */
    public function getLabels()
    {
        return $this->container['labels'];
    }

    /**
     * Sets labels
     *
     * @param \Fulfillment\StraightShip\Client\Model\Label[] $labels Created labels list
     *
     * @return $this
     */
    public function setLabels($labels)
    {
        $this->container['labels'] = $labels;

        return $this;
    }

    /**
     * Gets packing_slips
     *
     * @return \Fulfillment\StraightShip\Client\Model\Label[]
     */
    public function getPackingSlips()
    {
        return $this->container['packing_slips'];
    }

    /**
     * Sets packing_slips
     *
     * @param \Fulfillment\StraightShip\Client\Model\Label[] $packing_slips Created packing slips list.
     *
     * @return $this
     */
    public function setPackingSlips($packing_slips)
    {
        $this->container['packing_slips'] = $packing_slips;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description Box name
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets sequence_number
     *
     * @return int
     */
    public function getSequenceNumber()
    {
        return $this->container['sequence_number'];
    }

    /**
     * Sets sequence_number
     *
     * @param int $sequence_number Package sequential number in shipment
     *
     * @return $this
     */
    public function setSequenceNumber($sequence_number)
    {
        $this->container['sequence_number'] = $sequence_number;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return \Fulfillment\StraightShip\Client\Model\CustomField[]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param \Fulfillment\StraightShip\Client\Model\CustomField[] $custom_fields Custom fields to pass with package
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets user_documents
     *
     * @return \Fulfillment\StraightShip\Client\Model\UserDocument[]
     */
    public function getUserDocuments()
    {
        return $this->container['user_documents'];
    }

    /**
     * Sets user_documents
     *
     * @param \Fulfillment\StraightShip\Client\Model\UserDocument[] $user_documents User documents
     *
     * @return $this
     */
    public function setUserDocuments($user_documents)
    {
        $this->container['user_documents'] = $user_documents;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return double
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param double $weight Mandatory package net weight.
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets commodity_description
     *
     * @return string
     */
    public function getCommodityDescription()
    {
        return $this->container['commodity_description'];
    }

    /**
     * Sets commodity_description
     *
     * @param string $commodity_description Commodity description
     *
     * @return $this
     */
    public function setCommodityDescription($commodity_description)
    {
        $this->container['commodity_description'] = $commodity_description;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets package_freight_charge
     *
     * @return \Fulfillment\StraightShip\Client\Model\PackageFreightCharge
     */
    public function getPackageFreightCharge()
    {
        return $this->container['package_freight_charge'];
    }

    /**
     * Sets package_freight_charge
     *
     * @param \Fulfillment\StraightShip\Client\Model\PackageFreightCharge $package_freight_charge package_freight_charge
     *
     * @return $this
     */
    public function setPackageFreightCharge($package_freight_charge)
    {
        $this->container['package_freight_charge'] = $package_freight_charge;

        return $this;
    }

    /**
     * Gets weight_uom
     *
     * @return string
     */
    public function getWeightUom()
    {
        return $this->container['weight_uom'];
    }

    /**
     * Sets weight_uom
     *
     * @param string $weight_uom Weight UOM. Default is LBS.  Allowed values: LB, KG, OZ, G
     *
     * @return $this
     */
    public function setWeightUom($weight_uom)
    {
        $this->container['weight_uom'] = $weight_uom;

        return $this;
    }

    /**
     * Gets metro_scg_carton_id
     *
     * @return string
     */
    public function getMetroScgCartonId()
    {
        return $this->container['metro_scg_carton_id'];
    }

    /**
     * Sets metro_scg_carton_id
     *
     * @param string $metro_scg_carton_id For internal use only
     *
     * @return $this
     */
    public function setMetroScgCartonId($metro_scg_carton_id)
    {
        $this->container['metro_scg_carton_id'] = $metro_scg_carton_id;

        return $this;
    }

    /**
     * Gets dimensions
     *
     * @return \Fulfillment\StraightShip\Client\Model\Dimensions
     */
    public function getDimensions()
    {
        return $this->container['dimensions'];
    }

    /**
     * Sets dimensions
     *
     * @param \Fulfillment\StraightShip\Client\Model\Dimensions $dimensions dimensions
     *
     * @return $this
     */
    public function setDimensions($dimensions)
    {
        $this->container['dimensions'] = $dimensions;

        return $this;
    }

    /**
     * Gets batteries_info
     *
     * @return \Fulfillment\StraightShip\Client\Model\BatteriesInfo
     */
    public function getBatteriesInfo()
    {
        return $this->container['batteries_info'];
    }

    /**
     * Sets batteries_info
     *
     * @param \Fulfillment\StraightShip\Client\Model\BatteriesInfo $batteries_info batteries_info
     *
     * @return $this
     */
    public function setBatteriesInfo($batteries_info)
    {
        $this->container['batteries_info'] = $batteries_info;

        return $this;
    }

    /**
     * Gets package_details
     *
     * @return \Fulfillment\StraightShip\Client\Model\PackageDetails
     */
    public function getPackageDetails()
    {
        return $this->container['package_details'];
    }

    /**
     * Sets package_details
     *
     * @param \Fulfillment\StraightShip\Client\Model\PackageDetails $package_details package_details
     *
     * @return $this
     */
    public function setPackageDetails($package_details)
    {
        $this->container['package_details'] = $package_details;

        return $this;
    }

    /**
     * Gets package_options
     *
     * @return \Fulfillment\StraightShip\Client\Model\PackageOptions
     */
    public function getPackageOptions()
    {
        return $this->container['package_options'];
    }

    /**
     * Sets package_options
     *
     * @param \Fulfillment\StraightShip\Client\Model\PackageOptions $package_options package_options
     *
     * @return $this
     */
    public function setPackageOptions($package_options)
    {
        $this->container['package_options'] = $package_options;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
